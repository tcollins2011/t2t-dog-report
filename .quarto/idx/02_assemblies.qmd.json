{"title":"Contig Assemblies (hifiasm)","markdown":{"yaml":{"title":"Contig Assemblies (hifiasm)","description":"Contig-level quality across six dogs (primary, hap1, hap2)","format":{"html":{"toc":true,"code-fold":"show","df-print":"paged"}},"execute":{"echo":true,"warning":false,"message":false}},"headingText":"What this chapter shows","containsRefs":false,"markdown":"\n\n\nWe summarize **contig-level** assemblies produced by **hifiasm** (primary, hap1, hap2). We report N50/L50-style contiguity and total size, then visualize cross-dog differences. N50 is a weighted median contig length such that **50% of the assembly** is in contigs ≥ N50; NG50 is the same concept but uses an **expected genome size** as the denominator (useful for between-assembly comparisons).\n\n> Notes  \n> - Domestic dog (Canis familiaris) nuclear genome is ~**2.4–2.5 Gb**; we use 2.45 Gb as a default expected size for NG-metrics.\n> - hifiasm generates **primary** and **haplotype-resolved** contigs (hap1, hap2) from HiFi data, enabling direct comparison of maternal/paternal assemblies.\n\n::: callout-tip\nWe keep scaffolding (RagTag) and annotation (Liftoff) in later chapters so this section reflects **raw contiguity** from hifiasm.\n:::\n\n## Summary Table\n\nThese come from your linking script (`data/*_{hap1|hap2|primary}.stats.tsv`) and contain: `num`, `sum`, `n50`, `max`, `mean`.\n\n```{python}\nimport pandas as pd\n\nasm = pd.read_csv(\"data/assemblies.tsv\", sep=\"\\t\")\n# Human-friendly labels\nlabel_map = {\"p_ctg\":\"primary\", \"hap1.p_ctg\":\"hap1\", \"hap2.p_ctg\":\"hap2\"}\nasm[\"assembly\"] = asm[\"assembly\"].map(label_map).fillna(asm[\"assembly\"])\n\n# Normalize dog names (lowercase → Title)\nasm[\"dog\"] = asm[\"dog\"].str.title()\n\n# Order columns\nasm = asm[[\"dog\",\"assembly\",\"contigs\",\"length_bp\",\"n50_bp\",\"max_bp\",\"mean_bp\"]]\nasm.sort_values([\"dog\",\"assembly\"], inplace=True)\nasm\n\nasm_summary = (asm\n  .assign(length_Gb=lambda d: d[\"length_bp\"]/1e9,\n          n50_Mb=lambda d: d[\"n50_bp\"]/1e6,\n          max_Mb=lambda d: d[\"max_bp\"]/1e6,\n          mean_kb=lambda d: d[\"mean_bp\"]/1e3)\n  [[\"dog\",\"assembly\",\"contigs\",\"length_Gb\",\"n50_Mb\",\"max_Mb\",\"mean_kb\"]]\n  .rename(columns={\"length_Gb\":\"length (Gb)\",\"n50_Mb\":\"N50 (Mb)\",\"max_Mb\":\"max (Mb)\",\"mean_kb\":\"mean (kb)\"}))\nasm_summary\n\n```\n## Headline continuity plots \n```{python}\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nwanted = [\"primary\",\"hap1\",\"hap2\"]  \n# ---- Bar plot of N50 ----\nfig, ax = plt.subplots(figsize=(8,4))\npivot_n50 = (asm\n    .pivot(index=\"dog\", columns=\"assembly\", values=\"n50_bp\")\n    .reindex(sorted(asm[\"dog\"].unique()))\n    .reindex(columns=wanted) \n)\nx = np.arange(len(pivot_n50))\nw = 0.27\nfor i, col in enumerate(pivot_n50.columns):\n    ax.bar(x + i*w, pivot_n50[col]/1e6, width=w, label=col)\nax.set_xticks(x + w)\nax.set_xticklabels(pivot_n50.index, rotation=0)\nax.set_ylabel(\"N50 (Mb)\")\nax.set_title(\"Contig N50 by dog and haplotype\")\nax.legend()\nplt.tight_layout()\nplt.show()\n\n# ---- Total assembled size vs expected dog genome size ----\nexpected_bp = 2.45e9  # Canis familiaris ~2.4–2.5 Gb\nfig, ax = plt.subplots(figsize=(8,4))\npivot_sum = (asm\n    .pivot(index=\"dog\", columns=\"assembly\", values=\"length_bp\")\n    .reindex(sorted(asm[\"dog\"].unique()))\n    .reindex(columns=wanted)  \n)\nx = np.arange(len(pivot_sum)); w = 0.27\nfor i, col in enumerate(pivot_sum.columns):\n    ax.bar(x + i*w, pivot_sum[col]/1e9, width=w, label=col)\nax.axhline(expected_bp/1e9, linestyle=\"--\")\nax.set_xticks(x + w); ax.set_xticklabels(pivot_sum.index)\nax.set_ylabel(\"Assembly length (Gb)\")\nax.set_title(\"Total contig length vs expected dog genome size (~2.45 Gb)\")\nax.legend()\nplt.tight_layout()\nplt.show()\n\n# ---- Cumulative-length (lens) plots ----\nimport glob, re, math\n\ndef load_lens(path):\n    s = pd.read_csv(path, sep=r\"\\s+\", header=None, names=[\"len\"])\n    s = s.sort_values(\"len\", ascending=False).reset_index(drop=True)\n    s[\"cum\"] = s[\"len\"].cumsum()\n    return s\n\nlens_files = sorted(glob.glob(\"data/*_primary.fa.lens\") + glob.glob(\"data/*_hap1.fa.lens\") + glob.glob(\"data/*_hap2.fa.lens\"))\nif lens_files:\n    ncols = 3\n    nrows = math.ceil(len(lens_files)/ncols)\n    fig, axes = plt.subplots(nrows=nrows, ncols=ncols, figsize=(12, 3*nrows), squeeze=False)\n    for ax, f in zip(axes.flatten(), lens_files):\n        m = re.match(r\"data/([a-zA-Z0-9_-]+)_(primary|hap1|hap2)\\.fa\\.lens\", f)\n        if not m:  \n            ax.axis(\"off\"); ax.set_title(f\"Unrecognized: {f}\")\n            continue\n        dog, hap = m.group(1).title(), m.group(2)\n        df = load_lens(f)\n        total = df[\"len\"].sum()\n        ax.plot(range(1, len(df)+1), df[\"cum\"]/1e9)\n        ax.axhline(total*0.5/1e9, linestyle=\"--\")\n        ax.set_title(f\"{dog} {hap}\")\n        ax.set_xlabel(\"# contigs (sorted)\"); ax.set_ylabel(\"Cumulative length (Gb)\")\n    plt.tight_layout(); plt.show()\n```\n\n## Nx curves and area-under-Nx (auN)\n\n```{python}\n# --- Nx curves split into two panels -------------------------------------\nimport glob, re, pandas as pd, matplotlib.pyplot as plt, numpy as np\n\ndef load_lengths(path):\n    s = pd.read_csv(path, sep=r\"\\s+\", header=None, names=[\"len\"])\n    return s[\"len\"].sort_values(ascending=False).to_numpy()\n\ndef nx_curve(lengths):\n    cs  = lengths.cumsum()\n    tot = cs[-1]\n    nx_vals = [lengths[cs >= tot*(x/100)][0] for x in range(1,101)]\n    return np.arange(1,101), np.array(nx_vals)\n\ndef auN(nx_vals):          # area-under-Nx curve\n    return nx_vals.sum() / 100\n\n# collect curves\nlens_files = sorted(glob.glob(\"data/*_primary.fa.lens\") + glob.glob(\"data/*_hap1.fa.lens\") + glob.glob(\"data/*_hap2.fa.lens\"))\ncurves, summary = [], []\nfor f in lens_files:\n    m = re.match(r\".*/([A-Za-z]+)_(primary|hap1|hap2)\\.fa\\.lens\", f)\n    if not m:\n        continue\n    dog, asm = m.group(1).title(), m.group(2)\n    nx, vals = nx_curve(load_lengths(f))\n    curves.append((dog, asm, nx, vals))\n    summary.append({\"dog\":dog, \"assembly\":asm, \"auN_Mb\":auN(vals)/1e6})\n\nif not curves:\n    raise RuntimeError(\"No *.fa.lens files found; check your symlinks\")\n\n# split dogs 50 / 50\ndogs = sorted({d for d,_,_,_ in curves})\nmid  = len(dogs)//2\ngroups = [set(dogs[:mid]), set(dogs[mid:])]\n\nfor gidx, gset in enumerate(groups, start=1):\n    fig, ax = plt.subplots(figsize=(7,5))\n    for dog, asm, nx, vals in curves:\n        if dog not in gset:          # skip dogs not in this half\n            continue\n        ls = \"-\" if asm==\"primary\" else \"--\" if asm==\"hap1\" else \":\"\n        ax.plot(nx, vals/1e6, ls, label=f\"{dog} {asm}\")\n    ax.set_xlabel(\"x in Nx (%)\")\n    ax.set_ylabel(\"Contig length (Mb)\")\n    ax.set_title(f\"Nx curves — group {gidx} / 2  (higher & right = more contiguous)\")\n    ax.legend(fontsize=8, ncol=2)\n    plt.tight_layout(); plt.show()\n\n# --- auN summary table (unchanged) ---------------------------------------\nauN_df = (pd.DataFrame(summary)\n          .pivot(index=\"dog\", columns=\"assembly\", values=\"auN_Mb\")\n          .reindex(columns=[\"primary\",\"hap1\",\"hap2\"]))\nauN_df.round(1)\n\n\n\n```","srcMarkdownNoYaml":"\n\n## What this chapter shows\n\nWe summarize **contig-level** assemblies produced by **hifiasm** (primary, hap1, hap2). We report N50/L50-style contiguity and total size, then visualize cross-dog differences. N50 is a weighted median contig length such that **50% of the assembly** is in contigs ≥ N50; NG50 is the same concept but uses an **expected genome size** as the denominator (useful for between-assembly comparisons).\n\n> Notes  \n> - Domestic dog (Canis familiaris) nuclear genome is ~**2.4–2.5 Gb**; we use 2.45 Gb as a default expected size for NG-metrics.\n> - hifiasm generates **primary** and **haplotype-resolved** contigs (hap1, hap2) from HiFi data, enabling direct comparison of maternal/paternal assemblies.\n\n::: callout-tip\nWe keep scaffolding (RagTag) and annotation (Liftoff) in later chapters so this section reflects **raw contiguity** from hifiasm.\n:::\n\n## Summary Table\n\nThese come from your linking script (`data/*_{hap1|hap2|primary}.stats.tsv`) and contain: `num`, `sum`, `n50`, `max`, `mean`.\n\n```{python}\nimport pandas as pd\n\nasm = pd.read_csv(\"data/assemblies.tsv\", sep=\"\\t\")\n# Human-friendly labels\nlabel_map = {\"p_ctg\":\"primary\", \"hap1.p_ctg\":\"hap1\", \"hap2.p_ctg\":\"hap2\"}\nasm[\"assembly\"] = asm[\"assembly\"].map(label_map).fillna(asm[\"assembly\"])\n\n# Normalize dog names (lowercase → Title)\nasm[\"dog\"] = asm[\"dog\"].str.title()\n\n# Order columns\nasm = asm[[\"dog\",\"assembly\",\"contigs\",\"length_bp\",\"n50_bp\",\"max_bp\",\"mean_bp\"]]\nasm.sort_values([\"dog\",\"assembly\"], inplace=True)\nasm\n\nasm_summary = (asm\n  .assign(length_Gb=lambda d: d[\"length_bp\"]/1e9,\n          n50_Mb=lambda d: d[\"n50_bp\"]/1e6,\n          max_Mb=lambda d: d[\"max_bp\"]/1e6,\n          mean_kb=lambda d: d[\"mean_bp\"]/1e3)\n  [[\"dog\",\"assembly\",\"contigs\",\"length_Gb\",\"n50_Mb\",\"max_Mb\",\"mean_kb\"]]\n  .rename(columns={\"length_Gb\":\"length (Gb)\",\"n50_Mb\":\"N50 (Mb)\",\"max_Mb\":\"max (Mb)\",\"mean_kb\":\"mean (kb)\"}))\nasm_summary\n\n```\n## Headline continuity plots \n```{python}\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nwanted = [\"primary\",\"hap1\",\"hap2\"]  \n# ---- Bar plot of N50 ----\nfig, ax = plt.subplots(figsize=(8,4))\npivot_n50 = (asm\n    .pivot(index=\"dog\", columns=\"assembly\", values=\"n50_bp\")\n    .reindex(sorted(asm[\"dog\"].unique()))\n    .reindex(columns=wanted) \n)\nx = np.arange(len(pivot_n50))\nw = 0.27\nfor i, col in enumerate(pivot_n50.columns):\n    ax.bar(x + i*w, pivot_n50[col]/1e6, width=w, label=col)\nax.set_xticks(x + w)\nax.set_xticklabels(pivot_n50.index, rotation=0)\nax.set_ylabel(\"N50 (Mb)\")\nax.set_title(\"Contig N50 by dog and haplotype\")\nax.legend()\nplt.tight_layout()\nplt.show()\n\n# ---- Total assembled size vs expected dog genome size ----\nexpected_bp = 2.45e9  # Canis familiaris ~2.4–2.5 Gb\nfig, ax = plt.subplots(figsize=(8,4))\npivot_sum = (asm\n    .pivot(index=\"dog\", columns=\"assembly\", values=\"length_bp\")\n    .reindex(sorted(asm[\"dog\"].unique()))\n    .reindex(columns=wanted)  \n)\nx = np.arange(len(pivot_sum)); w = 0.27\nfor i, col in enumerate(pivot_sum.columns):\n    ax.bar(x + i*w, pivot_sum[col]/1e9, width=w, label=col)\nax.axhline(expected_bp/1e9, linestyle=\"--\")\nax.set_xticks(x + w); ax.set_xticklabels(pivot_sum.index)\nax.set_ylabel(\"Assembly length (Gb)\")\nax.set_title(\"Total contig length vs expected dog genome size (~2.45 Gb)\")\nax.legend()\nplt.tight_layout()\nplt.show()\n\n# ---- Cumulative-length (lens) plots ----\nimport glob, re, math\n\ndef load_lens(path):\n    s = pd.read_csv(path, sep=r\"\\s+\", header=None, names=[\"len\"])\n    s = s.sort_values(\"len\", ascending=False).reset_index(drop=True)\n    s[\"cum\"] = s[\"len\"].cumsum()\n    return s\n\nlens_files = sorted(glob.glob(\"data/*_primary.fa.lens\") + glob.glob(\"data/*_hap1.fa.lens\") + glob.glob(\"data/*_hap2.fa.lens\"))\nif lens_files:\n    ncols = 3\n    nrows = math.ceil(len(lens_files)/ncols)\n    fig, axes = plt.subplots(nrows=nrows, ncols=ncols, figsize=(12, 3*nrows), squeeze=False)\n    for ax, f in zip(axes.flatten(), lens_files):\n        m = re.match(r\"data/([a-zA-Z0-9_-]+)_(primary|hap1|hap2)\\.fa\\.lens\", f)\n        if not m:  \n            ax.axis(\"off\"); ax.set_title(f\"Unrecognized: {f}\")\n            continue\n        dog, hap = m.group(1).title(), m.group(2)\n        df = load_lens(f)\n        total = df[\"len\"].sum()\n        ax.plot(range(1, len(df)+1), df[\"cum\"]/1e9)\n        ax.axhline(total*0.5/1e9, linestyle=\"--\")\n        ax.set_title(f\"{dog} {hap}\")\n        ax.set_xlabel(\"# contigs (sorted)\"); ax.set_ylabel(\"Cumulative length (Gb)\")\n    plt.tight_layout(); plt.show()\n```\n\n## Nx curves and area-under-Nx (auN)\n\n```{python}\n# --- Nx curves split into two panels -------------------------------------\nimport glob, re, pandas as pd, matplotlib.pyplot as plt, numpy as np\n\ndef load_lengths(path):\n    s = pd.read_csv(path, sep=r\"\\s+\", header=None, names=[\"len\"])\n    return s[\"len\"].sort_values(ascending=False).to_numpy()\n\ndef nx_curve(lengths):\n    cs  = lengths.cumsum()\n    tot = cs[-1]\n    nx_vals = [lengths[cs >= tot*(x/100)][0] for x in range(1,101)]\n    return np.arange(1,101), np.array(nx_vals)\n\ndef auN(nx_vals):          # area-under-Nx curve\n    return nx_vals.sum() / 100\n\n# collect curves\nlens_files = sorted(glob.glob(\"data/*_primary.fa.lens\") + glob.glob(\"data/*_hap1.fa.lens\") + glob.glob(\"data/*_hap2.fa.lens\"))\ncurves, summary = [], []\nfor f in lens_files:\n    m = re.match(r\".*/([A-Za-z]+)_(primary|hap1|hap2)\\.fa\\.lens\", f)\n    if not m:\n        continue\n    dog, asm = m.group(1).title(), m.group(2)\n    nx, vals = nx_curve(load_lengths(f))\n    curves.append((dog, asm, nx, vals))\n    summary.append({\"dog\":dog, \"assembly\":asm, \"auN_Mb\":auN(vals)/1e6})\n\nif not curves:\n    raise RuntimeError(\"No *.fa.lens files found; check your symlinks\")\n\n# split dogs 50 / 50\ndogs = sorted({d for d,_,_,_ in curves})\nmid  = len(dogs)//2\ngroups = [set(dogs[:mid]), set(dogs[mid:])]\n\nfor gidx, gset in enumerate(groups, start=1):\n    fig, ax = plt.subplots(figsize=(7,5))\n    for dog, asm, nx, vals in curves:\n        if dog not in gset:          # skip dogs not in this half\n            continue\n        ls = \"-\" if asm==\"primary\" else \"--\" if asm==\"hap1\" else \":\"\n        ax.plot(nx, vals/1e6, ls, label=f\"{dog} {asm}\")\n    ax.set_xlabel(\"x in Nx (%)\")\n    ax.set_ylabel(\"Contig length (Mb)\")\n    ax.set_title(f\"Nx curves — group {gidx} / 2  (higher & right = more contiguous)\")\n    ax.legend(fontsize=8, ncol=2)\n    plt.tight_layout(); plt.show()\n\n# --- auN summary table (unchanged) ---------------------------------------\nauN_df = (pd.DataFrame(summary)\n          .pivot(index=\"dog\", columns=\"assembly\", values=\"auN_Mb\")\n          .reindex(columns=[\"primary\",\"hap1\",\"hap2\"]))\nauN_df.round(1)\n\n\n\n```"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"paged","error":false,"eval":true,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"message":false,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"show","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"number-sections":true,"self-contained":true,"output-file":"02_assemblies.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.7.33","theme":"cosmo","title":"Contig Assemblies (hifiasm)","description":"Contig-level quality across six dogs (primary, hap1, hap2)"},"extensions":{"book":{"multiFile":true}}},"html-single":{"identifier":{"display-name":"HTML","target-format":"html-single","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"message":false,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"02_assemblies.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.7.33","title":"Contig Assemblies (hifiasm)","description":"Contig-level quality across six dogs (primary, hap1, hap2)"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html","html-single"]}
{"title":"Scaffold Assemblies (RagTag)","markdown":{"yaml":{"title":"Scaffold Assemblies (RagTag)","description":"Chromosome-scale continuity and gap statistics after reference scaffolding","format":{"html":{"toc":true,"code-fold":"show","df-print":"paged"}},"execute":{"echo":true,"warning":false,"message":false}},"headingText":"What this chapter shows","containsRefs":false,"markdown":"\n\n\nWe summarise **scaffold-level** assemblies produced with **RagTag** using *GSD v1.0* as the reference.  \nFigures mirror those in **02 Assemblies** so you can see before-versus-after gains in continuity.\n\n> Expected dog genome size ≈ **2.45 Gb** (2.4–2.5 Gb).  \n> Ideal assembly has **39–40 scaffolds** (38 autosomes + X/Y).\n\n---\n\n## Summary Table\n\nThe `*.scaf.stats.tsv` files are single-line outputs from RagTag.  \nThey live in `data/scaffold/` along with the `.scaf.fa.lens` length files.\n\n```{python}\n#| results: \"show\"\nimport glob, re, sys, pathlib, pandas as pd, numpy as np\nfrom IPython.display import display\nimport matplotlib.pyplot as plt\n\nSTAT_DIR = pathlib.Path(\"data/scaffold\")\nstat_files = glob.glob(str(STAT_DIR / \"*.scaf.stats.tsv\"))\nif not stat_files:\n    sys.exit(f\"[ERROR] No scaffold stats found in {STAT_DIR}\")\n\nPAT = re.compile(rf\"{STAT_DIR}/([A-Za-z]+)_(primary|hap1|hap2)\\.scaf\\.stats\\.tsv$\")\n\nrecords = []\nfor f in stat_files:\n    m = PAT.match(f)\n    if not m:\n        continue\n    dog, asm = m.groups()\n    with open(f) as fh:\n        kv = dict(re.findall(r\"(\\w+)=([\\d.]+)\", fh.readline()))\n    records.append(dict(\n        dog      = dog.title(),\n        assembly = asm,\n        sum      = int(kv[\"sum\"]),\n        n50      = int(kv[\"n50\"]),\n        Ns       = int(kv.get(\"Ns\", 0)),\n        gaps     = int(kv.get(\"gaps\", 0))\n    ))\n\nscaf = pd.DataFrame(records)\nscaf[\"assembly\"]  = pd.Categorical(scaf[\"assembly\"], [\"primary\",\"hap1\",\"hap2\"], ordered=True)\nscaf[\"length_Gb\"] = scaf[\"sum\"]/1e9\nscaf[\"N50_Mb\"]    = scaf[\"n50\"]/1e6\nscaf[\"Ns_pct\"]    = 100*scaf[\"Ns\"]/scaf[\"sum\"]\nscaf = scaf.sort_values([\"dog\",\"assembly\"])\n\ntbl = (scaf[[\"dog\",\"assembly\",\"length_Gb\",\"N50_Mb\",\"gaps\",\"Ns_pct\"]]\n       .round({\"length_Gb\":2,\"N50_Mb\":1,\"Ns_pct\":2})\n       .rename(columns={\"length_Gb\":\"length (Gb)\",\"N50_Mb\":\"N50 (Mb)\",\n                        \"gaps\":\"# gaps\",\"Ns_pct\":\"% N\"}))\ndisplay(tbl)\n```\n## Headline continuity plots \n```{python}\nimport numpy as np, seaborn as sns\nwanted = [\"primary\",\"hap1\",\"hap2\"]\n\n# --- Bar: Scaffold N50 ------------------------------------------------\nfig, ax = plt.subplots(figsize=(8,4))\npivot = (scaf.pivot(index=\"dog\", columns=\"assembly\", values=\"N50_Mb\")\n              .reindex(sorted(scaf[\"dog\"].unique()))\n              .reindex(columns=wanted))\nx = np.arange(len(pivot)); w = 0.27\nfor i, col in enumerate(pivot.columns):\n    ax.bar(x+i*w, pivot[col], width=w, label=col)\nax.set_xticks(x+w); ax.set_xticklabels(pivot.index)\nax.set_ylabel(\"Scaffold N50 (Mb)\")\nax.set_title(\"Scaffold N50 by dog and haplotype\")\nax.legend(); plt.tight_layout(); plt.show()\n\n# --- Bar: Total scaffold length vs 2.45 Gb ---------------------------\nfig, ax = plt.subplots(figsize=(8,4))\npivot = (scaf.pivot(index=\"dog\", columns=\"assembly\", values=\"length_Gb\")\n              .reindex(sorted(scaf[\"dog\"].unique()))\n              .reindex(columns=wanted))\nfor i, col in enumerate(pivot.columns):\n    ax.bar(x+i*w, pivot[col], width=w, label=col)\nax.axhline(2.45, ls=\"--\", color=\"grey\")\nax.set_xticks(x+w); ax.set_xticklabels(pivot.index)\nax.set_ylabel(\"Scaffolded length (Gb)\")\nax.set_title(\"Total scaffold length vs expected genome size (2.45 Gb)\")\nax.legend(); plt.tight_layout(); plt.show()\n\n#| label: cumulative-length\n#| results: \"show\"\n# ---- Cumulative-length (lens) plots for scaffolds --------------------\nimport glob, re, math, pandas as pd, matplotlib.pyplot as plt\n\ndef load_lens(path):\n    df = pd.read_csv(path, sep=r\"\\s+\", header=None, names=[\"len\"])\n    df = df.sort_values(\"len\", ascending=False).reset_index(drop=True)\n    df[\"cum\"] = df[\"len\"].cumsum()\n    return df\n\nLENS_DIR   = \"data/scaffold\"\nlens_files = sorted(\n    glob.glob(f\"{LENS_DIR}/*_primary.scaf.fa.lens\") +\n    glob.glob(f\"{LENS_DIR}/*_hap1.scaf.fa.lens\")   +\n    glob.glob(f\"{LENS_DIR}/*_hap2.scaf.fa.lens\")\n)\n\nif lens_files:\n    ncols  = 3\n    nrows  = math.ceil(len(lens_files) / ncols)\n    fig, axes = plt.subplots(nrows=nrows, ncols=ncols,\n                             figsize=(12, 3 * nrows), squeeze=False)\n\n    for ax, f in zip(axes.flatten(), lens_files):\n        m = re.match(r\".*/([A-Za-z0-9_-]+)_(primary|hap1|hap2)\\.scaf\\.fa\\.lens\", f)\n        if not m:        # unexpected filename\n            ax.axis(\"off\"); ax.set_title(f\"Unrecognized: {f}\")\n            continue\n        dog, asm = m.group(1).title(), m.group(2)\n        df  = load_lens(f)\n        tot = df[\"len\"].sum()\n\n        ax.plot(range(1, len(df) + 1), df[\"cum\"] / 1e9)\n        ax.axhline(tot * 0.5 / 1e9, ls=\"--\")        # 50 % line\n        ax.set_title(f\"{dog} {asm}\")\n        ax.set_xlabel(\"# scaffolds (sorted)\")\n        ax.set_ylabel(\"Cumulative length (Gb)\")\n\n    # Hide any empty subplots\n    for extra_ax in axes.flatten()[len(lens_files):]:\n        extra_ax.axis(\"off\")\n\n    plt.tight_layout(); plt.show()\nelse:\n    print(\"No *.scaf.fa.lens files found in data/scaffold/\")\n```\n## Nx curves and area-under-Nx (auN)\n```{python}\nimport math, numpy as np\n\ndef load_lens(path):\n    arr = np.loadtxt(path, dtype=int)\n    return np.sort(arr)[::-1]\n\ndef nx_curve(arr):\n    cs, tot = arr.cumsum(), arr.sum()\n    return np.array([arr[cs >= tot*x/100][0] for x in range(1,101)])\n\nLENS_DIR  = STAT_DIR\nlens_files = sorted(glob.glob(str(LENS_DIR / \"*.scaf.fa.lens\")))\ncurves, summary = [], []\nfor f in lens_files:\n    m = re.match(r\".*/([A-Za-z]+)_(primary|hap1|hap2)\\.scaf\\.fa\\.lens\", f)\n    if not m: continue\n    dog, asm = m.groups(); dog = dog.title()\n    arr = load_lens(f); nx = nx_curve(arr)\n    curves.append((dog, asm, nx))\n    summary.append({\"dog\":dog,\"assembly\":asm,\"auN_Mb\":nx.sum()/100/1e6})\n\n# split dogs into two groups for legible plots\ndogs = sorted({d for d,_,_ in curves}); mid=len(dogs)//2\nfor group, dset in enumerate([dogs[:mid], dogs[mid:]], start=1):\n    plt.figure(figsize=(7,5))\n    for dog, asm, nx in curves:\n        if dog not in dset: continue\n        ls = \"-\" if asm==\"primary\" else \"--\" if asm==\"hap1\" else \":\"\n        plt.plot(range(1,101), nx/1e6, ls, label=f\"{dog} {asm}\")\n    plt.xlabel(\"x in Nx (%)\"); plt.ylabel(\"Length (Mb)\")\n    plt.title(f\"Nx curves — group {group}/2 (scaffolds)\")\n    plt.legend(fontsize=8, ncol=2); plt.tight_layout(); plt.show()\n\ndisplay(pd.DataFrame(summary)\n        .pivot(index=\"dog\", columns=\"assembly\", values=\"auN_Mb\")\n        .reindex(columns=wanted)\n        .round(1))\n```\n","srcMarkdownNoYaml":"\n\n## What this chapter shows\n\nWe summarise **scaffold-level** assemblies produced with **RagTag** using *GSD v1.0* as the reference.  \nFigures mirror those in **02 Assemblies** so you can see before-versus-after gains in continuity.\n\n> Expected dog genome size ≈ **2.45 Gb** (2.4–2.5 Gb).  \n> Ideal assembly has **39–40 scaffolds** (38 autosomes + X/Y).\n\n---\n\n## Summary Table\n\nThe `*.scaf.stats.tsv` files are single-line outputs from RagTag.  \nThey live in `data/scaffold/` along with the `.scaf.fa.lens` length files.\n\n```{python}\n#| results: \"show\"\nimport glob, re, sys, pathlib, pandas as pd, numpy as np\nfrom IPython.display import display\nimport matplotlib.pyplot as plt\n\nSTAT_DIR = pathlib.Path(\"data/scaffold\")\nstat_files = glob.glob(str(STAT_DIR / \"*.scaf.stats.tsv\"))\nif not stat_files:\n    sys.exit(f\"[ERROR] No scaffold stats found in {STAT_DIR}\")\n\nPAT = re.compile(rf\"{STAT_DIR}/([A-Za-z]+)_(primary|hap1|hap2)\\.scaf\\.stats\\.tsv$\")\n\nrecords = []\nfor f in stat_files:\n    m = PAT.match(f)\n    if not m:\n        continue\n    dog, asm = m.groups()\n    with open(f) as fh:\n        kv = dict(re.findall(r\"(\\w+)=([\\d.]+)\", fh.readline()))\n    records.append(dict(\n        dog      = dog.title(),\n        assembly = asm,\n        sum      = int(kv[\"sum\"]),\n        n50      = int(kv[\"n50\"]),\n        Ns       = int(kv.get(\"Ns\", 0)),\n        gaps     = int(kv.get(\"gaps\", 0))\n    ))\n\nscaf = pd.DataFrame(records)\nscaf[\"assembly\"]  = pd.Categorical(scaf[\"assembly\"], [\"primary\",\"hap1\",\"hap2\"], ordered=True)\nscaf[\"length_Gb\"] = scaf[\"sum\"]/1e9\nscaf[\"N50_Mb\"]    = scaf[\"n50\"]/1e6\nscaf[\"Ns_pct\"]    = 100*scaf[\"Ns\"]/scaf[\"sum\"]\nscaf = scaf.sort_values([\"dog\",\"assembly\"])\n\ntbl = (scaf[[\"dog\",\"assembly\",\"length_Gb\",\"N50_Mb\",\"gaps\",\"Ns_pct\"]]\n       .round({\"length_Gb\":2,\"N50_Mb\":1,\"Ns_pct\":2})\n       .rename(columns={\"length_Gb\":\"length (Gb)\",\"N50_Mb\":\"N50 (Mb)\",\n                        \"gaps\":\"# gaps\",\"Ns_pct\":\"% N\"}))\ndisplay(tbl)\n```\n## Headline continuity plots \n```{python}\nimport numpy as np, seaborn as sns\nwanted = [\"primary\",\"hap1\",\"hap2\"]\n\n# --- Bar: Scaffold N50 ------------------------------------------------\nfig, ax = plt.subplots(figsize=(8,4))\npivot = (scaf.pivot(index=\"dog\", columns=\"assembly\", values=\"N50_Mb\")\n              .reindex(sorted(scaf[\"dog\"].unique()))\n              .reindex(columns=wanted))\nx = np.arange(len(pivot)); w = 0.27\nfor i, col in enumerate(pivot.columns):\n    ax.bar(x+i*w, pivot[col], width=w, label=col)\nax.set_xticks(x+w); ax.set_xticklabels(pivot.index)\nax.set_ylabel(\"Scaffold N50 (Mb)\")\nax.set_title(\"Scaffold N50 by dog and haplotype\")\nax.legend(); plt.tight_layout(); plt.show()\n\n# --- Bar: Total scaffold length vs 2.45 Gb ---------------------------\nfig, ax = plt.subplots(figsize=(8,4))\npivot = (scaf.pivot(index=\"dog\", columns=\"assembly\", values=\"length_Gb\")\n              .reindex(sorted(scaf[\"dog\"].unique()))\n              .reindex(columns=wanted))\nfor i, col in enumerate(pivot.columns):\n    ax.bar(x+i*w, pivot[col], width=w, label=col)\nax.axhline(2.45, ls=\"--\", color=\"grey\")\nax.set_xticks(x+w); ax.set_xticklabels(pivot.index)\nax.set_ylabel(\"Scaffolded length (Gb)\")\nax.set_title(\"Total scaffold length vs expected genome size (2.45 Gb)\")\nax.legend(); plt.tight_layout(); plt.show()\n\n#| label: cumulative-length\n#| results: \"show\"\n# ---- Cumulative-length (lens) plots for scaffolds --------------------\nimport glob, re, math, pandas as pd, matplotlib.pyplot as plt\n\ndef load_lens(path):\n    df = pd.read_csv(path, sep=r\"\\s+\", header=None, names=[\"len\"])\n    df = df.sort_values(\"len\", ascending=False).reset_index(drop=True)\n    df[\"cum\"] = df[\"len\"].cumsum()\n    return df\n\nLENS_DIR   = \"data/scaffold\"\nlens_files = sorted(\n    glob.glob(f\"{LENS_DIR}/*_primary.scaf.fa.lens\") +\n    glob.glob(f\"{LENS_DIR}/*_hap1.scaf.fa.lens\")   +\n    glob.glob(f\"{LENS_DIR}/*_hap2.scaf.fa.lens\")\n)\n\nif lens_files:\n    ncols  = 3\n    nrows  = math.ceil(len(lens_files) / ncols)\n    fig, axes = plt.subplots(nrows=nrows, ncols=ncols,\n                             figsize=(12, 3 * nrows), squeeze=False)\n\n    for ax, f in zip(axes.flatten(), lens_files):\n        m = re.match(r\".*/([A-Za-z0-9_-]+)_(primary|hap1|hap2)\\.scaf\\.fa\\.lens\", f)\n        if not m:        # unexpected filename\n            ax.axis(\"off\"); ax.set_title(f\"Unrecognized: {f}\")\n            continue\n        dog, asm = m.group(1).title(), m.group(2)\n        df  = load_lens(f)\n        tot = df[\"len\"].sum()\n\n        ax.plot(range(1, len(df) + 1), df[\"cum\"] / 1e9)\n        ax.axhline(tot * 0.5 / 1e9, ls=\"--\")        # 50 % line\n        ax.set_title(f\"{dog} {asm}\")\n        ax.set_xlabel(\"# scaffolds (sorted)\")\n        ax.set_ylabel(\"Cumulative length (Gb)\")\n\n    # Hide any empty subplots\n    for extra_ax in axes.flatten()[len(lens_files):]:\n        extra_ax.axis(\"off\")\n\n    plt.tight_layout(); plt.show()\nelse:\n    print(\"No *.scaf.fa.lens files found in data/scaffold/\")\n```\n## Nx curves and area-under-Nx (auN)\n```{python}\nimport math, numpy as np\n\ndef load_lens(path):\n    arr = np.loadtxt(path, dtype=int)\n    return np.sort(arr)[::-1]\n\ndef nx_curve(arr):\n    cs, tot = arr.cumsum(), arr.sum()\n    return np.array([arr[cs >= tot*x/100][0] for x in range(1,101)])\n\nLENS_DIR  = STAT_DIR\nlens_files = sorted(glob.glob(str(LENS_DIR / \"*.scaf.fa.lens\")))\ncurves, summary = [], []\nfor f in lens_files:\n    m = re.match(r\".*/([A-Za-z]+)_(primary|hap1|hap2)\\.scaf\\.fa\\.lens\", f)\n    if not m: continue\n    dog, asm = m.groups(); dog = dog.title()\n    arr = load_lens(f); nx = nx_curve(arr)\n    curves.append((dog, asm, nx))\n    summary.append({\"dog\":dog,\"assembly\":asm,\"auN_Mb\":nx.sum()/100/1e6})\n\n# split dogs into two groups for legible plots\ndogs = sorted({d for d,_,_ in curves}); mid=len(dogs)//2\nfor group, dset in enumerate([dogs[:mid], dogs[mid:]], start=1):\n    plt.figure(figsize=(7,5))\n    for dog, asm, nx in curves:\n        if dog not in dset: continue\n        ls = \"-\" if asm==\"primary\" else \"--\" if asm==\"hap1\" else \":\"\n        plt.plot(range(1,101), nx/1e6, ls, label=f\"{dog} {asm}\")\n    plt.xlabel(\"x in Nx (%)\"); plt.ylabel(\"Length (Mb)\")\n    plt.title(f\"Nx curves — group {group}/2 (scaffolds)\")\n    plt.legend(fontsize=8, ncol=2); plt.tight_layout(); plt.show()\n\ndisplay(pd.DataFrame(summary)\n        .pivot(index=\"dog\", columns=\"assembly\", values=\"auN_Mb\")\n        .reindex(columns=wanted)\n        .round(1))\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"paged","error":false,"eval":true,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"message":false,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"show","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"number-sections":true,"self-contained":true,"output-file":"03_scaffolding.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.7.33","theme":"cosmo","title":"Scaffold Assemblies (RagTag)","description":"Chromosome-scale continuity and gap statistics after reference scaffolding"},"extensions":{"book":{"multiFile":true}}},"html-single":{"identifier":{"display-name":"HTML","target-format":"html-single","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"message":false,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"03_scaffolding.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.7.33","title":"Scaffold Assemblies (RagTag)","description":"Chromosome-scale continuity and gap statistics after reference scaffolding"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html","html-single"]}
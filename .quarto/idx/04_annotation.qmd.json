{"title":"Genome Annotation Transfer (Liftoff)","markdown":{"yaml":{"title":"Genome Annotation Transfer (Liftoff)","description":"How well did genes lift over from GSD reference to each dog assembly?","format":{"html":{"toc":true,"code-fold":"show"}},"execute":{"echo":true,"warning":false,"message":false}},"headingText":"Summary Table","containsRefs":false,"markdown":"\n```{python}\n\nimport pandas as pd, seaborn as sns, matplotlib.pyplot as plt\nfrom IPython.display import display\n\n# ------------------------------------------------------------------\n# 1. read & harmonise column names / labels\n# ------------------------------------------------------------------\nlift = pd.read_csv(\"data/liftoff_summary.tsv\", sep=\"\\t\")\n\n# Convert haplotype → assembly label we want in plots\nlift[\"assembly\"] = (lift[\"haplotype\"]\n                      .str.replace(\"_scaffold\", \"\", regex=False)   # drop suffix\n                      .str.replace(\"hap\", \"hap\",  regex=False))    # hap1_scaffold → hap1\n\n# optional: if you later add primary rows, this keeps order stable\nlift[\"assembly\"] = pd.Categorical(lift[\"assembly\"],\n                                  categories=[\"primary\", \"hap1\", \"hap2\"],\n                                  ordered=True)\n\nlift[\"dog\"] = lift[\"dog\"].str.title()          # Appa → Appa\n\n# ------------------------------------------------------------------\n# 2. quick table\n# ------------------------------------------------------------------\nlift_tbl = (lift\n   .assign(pct_mapped = 100*lift[\"genes_mapped\"] /\n                       (lift[\"genes_mapped\"] + lift[\"unmapped_genes\"]))\n   [[\"dog\",\"assembly\",\"genes_mapped\",\"unmapped_genes\",\"pct_mapped\"]]\n   .round({\"pct_mapped\":1}))\ndisplay(lift_tbl)\n\n# ------------------------------------------------------------------\n# 3. % mapped bar plot\n# ------------------------------------------------------------------\nsns.barplot(data=lift, x=\"dog\",\n            y=lift[\"genes_mapped\"] /\n              (lift[\"genes_mapped\"]+lift[\"unmapped_genes\"]),\n            hue=\"assembly\")\nplt.ylabel(\"% reference genes mapped\")\nplt.ylim(0,1)\nplt.title(\"Liftoff annotation transfer success\")\nplt.tight_layout(); plt.show()\n\n\n```\n\n## Mising Genes Ontology \n\n```{python}\n# --- 1 · unmapped-gene lists -------------------------------------------------\nimport glob, re, pandas as pd, matplotlib.pyplot as plt, seaborn as sns, textwrap\nfrom IPython.display import Markdown, display\nfrom pathlib import Path\nimport urllib.request, sys\n\nrx = re.compile(r\"data/liftoff/([A-Za-z]+)_(hap[12])(?:_scaffold)?_unmapped\\.txt\")\nrecords = []\nfor p in glob.glob(\"data/liftoff/*_unmapped.txt\"):\n    m = rx.match(p)\n    if m:\n        with open(p) as fh:\n            records += [{\"dog\": m[1].title(), \"assembly\": m[2], \"gene\": g.strip()}\n                         for g in fh]\n\nunmapped = pd.DataFrame(records)\nif unmapped.empty:\n    display(Markdown(\"**All reference genes mapped – no enrichment to run.**\"))\n    sys.exit()\n\n# --- 2 · reference mapping (gene → GO) --------------------------------------\ngene2go = pd.read_csv(\"data/ref_gene2go.tsv\", sep=\"\\t\",\n                      names=[\"gene\", \"go\"], dtype=str)\ngene2go_dict = (gene2go.groupby(\"gene\")[\"go\"].apply(set).to_dict())\n\n# --- 3 · GO enrichment ------------------------------------------------------\n\nimport contextlib, io\n\n@contextlib.contextmanager\ndef quiet_stdout():\n    \"\"\"Temporarily suppress stdout (e.g. goatools chatter).\"\"\"\n    buf = io.StringIO()\n    with contextlib.redirect_stdout(buf):\n        yield\nfrom goatools.obo_parser import GODag\nfrom goatools.go_enrichment import GOEnrichmentStudy\n\nobo = Path(\"data/go/go-basic.obo\")\nif not obo.exists():\n    obo.parent.mkdir(parents=True, exist_ok=True)\n    urllib.request.urlretrieve(\n        \"https://current.geneontology.org/ontology/go-basic.obo\", obo\n    )\n\nwith quiet_stdout():\n    go_dag = GODag(str(obo))\n\nrows = []\nfor (dog, asm), df in unmapped.groupby([\"dog\", \"assembly\"]):\n    study = set(df[\"gene\"])\n    pop   = set(gene2go[\"gene\"])\n    with quiet_stdout():\n        goea  = GOEnrichmentStudy(pop, gene2go_dict, go_dag,\n                                methods=[\"fdr_bh\"], alpha=0.05, prt=None)\n        sig   = [r for r in goea.run_study(study) if r.p_fdr_bh < 0.05]\n        for r in sig[:10]:                       # keep top 10 per set\n            rows.append({\"dog\": dog, \"assembly\": asm,\n                        \"GO\": r.GO, \"desc\": r.name,\n                        \"pct_study\": 100*r.ratio_in_study[0]/r.ratio_in_study[1],\n                        \"p_FDR\": r.p_fdr_bh})\n\nenrich = pd.DataFrame(rows)\n\n# --- 4a · tabbed paged table of unmapped genes ------------------------------\nmd = [\"::: {.panel-tabset}\\n\"]\nfor dog in sorted(unmapped[\"dog\"].unique()):\n    md += [f\"#### {dog}\\n\"]\n    tbl = (unmapped.loc[unmapped[\"dog\"] == dog]\n           .pivot_table(index=\"gene\", columns=\"assembly\", aggfunc=\"size\",\n                        fill_value=0)\n           .replace({0: \"✓\", 1: \"✗\"})\n           .sort_index()\n           .head(50))                       # first 50 genes\n    md += [tbl.to_markdown(), \"\"]\nmd += [\":::\"]\ndisplay(Markdown(\"#### First 50 Genes missing in one or both haplotypes\"))\ndisplay(Markdown(\"\\n\".join(md)))\n\n# --- 4b · GO-term × (dog-hap) presence table --------------------------------\nif not enrich.empty:\n    enrich[\"set\"] = enrich[\"dog\"] + \"-\" + enrich[\"assembly\"]\n    heat = (enrich.pivot_table(index=\"desc\", columns=\"set\",\n                               aggfunc=\"size\", fill_value=0)\n                  .replace({0: \"\", 1: \"✗\"})\n                  .sort_index())\n    display(Markdown(\"#### Enriched GO terms among unmapped genes across all dogs / haplotypes\"))\n    display(heat)                        \n\n# --- 4c · bar-plots of top terms -------------------------------------------\nif not enrich.empty:\n    enrich[\"desc_wrapped\"] = enrich[\"desc\"].apply(\n        lambda s: \"\\n\".join(textwrap.wrap(s, 35))\n    )\n    top = (enrich.sort_values(\"p_FDR\")\n                 .groupby([\"dog\", \"assembly\"])\n                 .head(5))               # top 5 per dog × hap\n\n    g = sns.catplot(data=top,\n                    x=\"pct_study\", y=\"desc_wrapped\",\n                    hue=\"assembly\", col=\"dog\",\n                    col_wrap=3, sharey=False,\n                    height=4.8, aspect=1.2,\n                    palette=\"Set2\", kind=\"bar\")\n\n    g.set_titles(\"{col_name}\")\n    g.set_xlabels(\"% of unmapped genes\")\n    g.set_ylabels(\"\")\n    g.fig.subplots_adjust(top=0.9)\n    g.fig.suptitle(\"Top enriched 5 GO terms among unmapped genes\",\n                   fontsize=14, weight=\"bold\")\n    plt.show()\n\n```","srcMarkdownNoYaml":"\n## Summary Table\n```{python}\n\nimport pandas as pd, seaborn as sns, matplotlib.pyplot as plt\nfrom IPython.display import display\n\n# ------------------------------------------------------------------\n# 1. read & harmonise column names / labels\n# ------------------------------------------------------------------\nlift = pd.read_csv(\"data/liftoff_summary.tsv\", sep=\"\\t\")\n\n# Convert haplotype → assembly label we want in plots\nlift[\"assembly\"] = (lift[\"haplotype\"]\n                      .str.replace(\"_scaffold\", \"\", regex=False)   # drop suffix\n                      .str.replace(\"hap\", \"hap\",  regex=False))    # hap1_scaffold → hap1\n\n# optional: if you later add primary rows, this keeps order stable\nlift[\"assembly\"] = pd.Categorical(lift[\"assembly\"],\n                                  categories=[\"primary\", \"hap1\", \"hap2\"],\n                                  ordered=True)\n\nlift[\"dog\"] = lift[\"dog\"].str.title()          # Appa → Appa\n\n# ------------------------------------------------------------------\n# 2. quick table\n# ------------------------------------------------------------------\nlift_tbl = (lift\n   .assign(pct_mapped = 100*lift[\"genes_mapped\"] /\n                       (lift[\"genes_mapped\"] + lift[\"unmapped_genes\"]))\n   [[\"dog\",\"assembly\",\"genes_mapped\",\"unmapped_genes\",\"pct_mapped\"]]\n   .round({\"pct_mapped\":1}))\ndisplay(lift_tbl)\n\n# ------------------------------------------------------------------\n# 3. % mapped bar plot\n# ------------------------------------------------------------------\nsns.barplot(data=lift, x=\"dog\",\n            y=lift[\"genes_mapped\"] /\n              (lift[\"genes_mapped\"]+lift[\"unmapped_genes\"]),\n            hue=\"assembly\")\nplt.ylabel(\"% reference genes mapped\")\nplt.ylim(0,1)\nplt.title(\"Liftoff annotation transfer success\")\nplt.tight_layout(); plt.show()\n\n\n```\n\n## Mising Genes Ontology \n\n```{python}\n# --- 1 · unmapped-gene lists -------------------------------------------------\nimport glob, re, pandas as pd, matplotlib.pyplot as plt, seaborn as sns, textwrap\nfrom IPython.display import Markdown, display\nfrom pathlib import Path\nimport urllib.request, sys\n\nrx = re.compile(r\"data/liftoff/([A-Za-z]+)_(hap[12])(?:_scaffold)?_unmapped\\.txt\")\nrecords = []\nfor p in glob.glob(\"data/liftoff/*_unmapped.txt\"):\n    m = rx.match(p)\n    if m:\n        with open(p) as fh:\n            records += [{\"dog\": m[1].title(), \"assembly\": m[2], \"gene\": g.strip()}\n                         for g in fh]\n\nunmapped = pd.DataFrame(records)\nif unmapped.empty:\n    display(Markdown(\"**All reference genes mapped – no enrichment to run.**\"))\n    sys.exit()\n\n# --- 2 · reference mapping (gene → GO) --------------------------------------\ngene2go = pd.read_csv(\"data/ref_gene2go.tsv\", sep=\"\\t\",\n                      names=[\"gene\", \"go\"], dtype=str)\ngene2go_dict = (gene2go.groupby(\"gene\")[\"go\"].apply(set).to_dict())\n\n# --- 3 · GO enrichment ------------------------------------------------------\n\nimport contextlib, io\n\n@contextlib.contextmanager\ndef quiet_stdout():\n    \"\"\"Temporarily suppress stdout (e.g. goatools chatter).\"\"\"\n    buf = io.StringIO()\n    with contextlib.redirect_stdout(buf):\n        yield\nfrom goatools.obo_parser import GODag\nfrom goatools.go_enrichment import GOEnrichmentStudy\n\nobo = Path(\"data/go/go-basic.obo\")\nif not obo.exists():\n    obo.parent.mkdir(parents=True, exist_ok=True)\n    urllib.request.urlretrieve(\n        \"https://current.geneontology.org/ontology/go-basic.obo\", obo\n    )\n\nwith quiet_stdout():\n    go_dag = GODag(str(obo))\n\nrows = []\nfor (dog, asm), df in unmapped.groupby([\"dog\", \"assembly\"]):\n    study = set(df[\"gene\"])\n    pop   = set(gene2go[\"gene\"])\n    with quiet_stdout():\n        goea  = GOEnrichmentStudy(pop, gene2go_dict, go_dag,\n                                methods=[\"fdr_bh\"], alpha=0.05, prt=None)\n        sig   = [r for r in goea.run_study(study) if r.p_fdr_bh < 0.05]\n        for r in sig[:10]:                       # keep top 10 per set\n            rows.append({\"dog\": dog, \"assembly\": asm,\n                        \"GO\": r.GO, \"desc\": r.name,\n                        \"pct_study\": 100*r.ratio_in_study[0]/r.ratio_in_study[1],\n                        \"p_FDR\": r.p_fdr_bh})\n\nenrich = pd.DataFrame(rows)\n\n# --- 4a · tabbed paged table of unmapped genes ------------------------------\nmd = [\"::: {.panel-tabset}\\n\"]\nfor dog in sorted(unmapped[\"dog\"].unique()):\n    md += [f\"#### {dog}\\n\"]\n    tbl = (unmapped.loc[unmapped[\"dog\"] == dog]\n           .pivot_table(index=\"gene\", columns=\"assembly\", aggfunc=\"size\",\n                        fill_value=0)\n           .replace({0: \"✓\", 1: \"✗\"})\n           .sort_index()\n           .head(50))                       # first 50 genes\n    md += [tbl.to_markdown(), \"\"]\nmd += [\":::\"]\ndisplay(Markdown(\"#### First 50 Genes missing in one or both haplotypes\"))\ndisplay(Markdown(\"\\n\".join(md)))\n\n# --- 4b · GO-term × (dog-hap) presence table --------------------------------\nif not enrich.empty:\n    enrich[\"set\"] = enrich[\"dog\"] + \"-\" + enrich[\"assembly\"]\n    heat = (enrich.pivot_table(index=\"desc\", columns=\"set\",\n                               aggfunc=\"size\", fill_value=0)\n                  .replace({0: \"\", 1: \"✗\"})\n                  .sort_index())\n    display(Markdown(\"#### Enriched GO terms among unmapped genes across all dogs / haplotypes\"))\n    display(heat)                        \n\n# --- 4c · bar-plots of top terms -------------------------------------------\nif not enrich.empty:\n    enrich[\"desc_wrapped\"] = enrich[\"desc\"].apply(\n        lambda s: \"\\n\".join(textwrap.wrap(s, 35))\n    )\n    top = (enrich.sort_values(\"p_FDR\")\n                 .groupby([\"dog\", \"assembly\"])\n                 .head(5))               # top 5 per dog × hap\n\n    g = sns.catplot(data=top,\n                    x=\"pct_study\", y=\"desc_wrapped\",\n                    hue=\"assembly\", col=\"dog\",\n                    col_wrap=3, sharey=False,\n                    height=4.8, aspect=1.2,\n                    palette=\"Set2\", kind=\"bar\")\n\n    g.set_titles(\"{col_name}\")\n    g.set_xlabels(\"% of unmapped genes\")\n    g.set_ylabels(\"\")\n    g.fig.subplots_adjust(top=0.9)\n    g.fig.suptitle(\"Top enriched 5 GO terms among unmapped genes\",\n                   fontsize=14, weight=\"bold\")\n    plt.show()\n\n```"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"message":false,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"show","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"number-sections":true,"self-contained":true,"output-file":"04_annotation.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.7.33","theme":"cosmo","title":"Genome Annotation Transfer (Liftoff)","description":"How well did genes lift over from GSD reference to each dog assembly?"},"extensions":{"book":{"multiFile":true}}},"html-single":{"identifier":{"display-name":"HTML","target-format":"html-single","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"message":false,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"04_annotation.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.7.33","title":"Genome Annotation Transfer (Liftoff)","description":"How well did genes lift over from GSD reference to each dog assembly?"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html","html-single"]}